{"version":3,"file":"./scripts/contacts.bundle.js","mappings":"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","sources":["webpack://online-course/./src/assets/scripts/base/trap-tab-key.js","webpack://online-course/./src/assets/scripts/base/menu.js","webpack://online-course/./src/assets/scripts/script.js","webpack://online-course/./src/assets/scripts/base/popup.js","webpack://online-course/./src/assets/scripts/base/animate-form-labels.js","webpack://online-course/./src/assets/scripts/base/scroll.js","webpack://online-course/./src/assets/scripts/base/toggle-password.js"],"sourcesContent":["export const trapTabKey = (elem) => {\r\n  const focusableElementsString = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], [contenteditable]';\r\n  let focusableElements = elem.querySelectorAll(focusableElementsString);\r\n  focusableElements = Array.prototype.slice.call(focusableElements);\r\n\r\n  const firstTabStop = focusableElements[0];\r\n  const lastTabStop = focusableElements[focusableElements.length - 1];\r\n\r\n  firstTabStop.focus();\r\n\r\n  elem.addEventListener('keydown', (evt) => {\r\n    if (evt.keyCode === 9) {\r\n      if (evt.shiftKey) {\r\n        if (document.activeElement === firstTabStop) {\r\n          evt.preventDefault();\r\n          lastTabStop.focus();\r\n        }\r\n      } else {\r\n        if (document.activeElement === lastTabStop) {\r\n          evt.preventDefault();\r\n          firstTabStop.focus();\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n","import {trapTabKey} from './trap-tab-key';\r\n\r\nexport const menu = () => {\r\n  const pageBody = document.querySelector('.page__body');\r\n  const navbarMenu = pageBody.querySelector('.navbar__menu');\r\n  const toggleButton = pageBody.querySelector('.menu__toggle');\r\n  let lastFocusedElement;\r\n\r\n  const closeMenu = () => {\r\n    pageBody.classList.remove('page__body--lock');\r\n    navbarMenu.classList.remove('is-opened');\r\n\r\n    lastFocusedElement.focus();\r\n  };\r\n\r\n  const onToggleButtonClick = () => {\r\n    pageBody.classList.toggle('page__body--lock');\r\n    navbarMenu.classList.toggle('is-opened');\r\n\r\n    if (navbarMenu.classList.contains('is-opened')) {\r\n      lastFocusedElement = document.activeElement;\r\n\r\n      trapTabKey(navbarMenu);\r\n\r\n      navbarMenu.addEventListener('keydown', (e) => {\r\n        if (e.keyCode === 27 || e.key === 'Escape' || e.key === 'Esc') {\r\n          closeMenu();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleButton.addEventListener('click', onToggleButtonClick);\r\n};\r\n","import {menu} from './base/menu';\nimport {popup} from './base/popup';\nimport {animateFormLabels} from './base/animate-form-labels';\nimport {scroll} from './base/scroll';\nimport {togglePassword} from './base/toggle-password';\n\nmenu();\npopup();\nanimateFormLabels();\nscroll();\ntogglePassword();\n","import {trapTabKey} from './trap-tab-key';\r\n\r\nexport const popup = () => {\r\n  const pageBody = document.querySelector('.page__body');\r\n  const openModalLogin = pageBody.querySelector('.account__login');\r\n  const openModalRegister = pageBody.querySelector('.account__register');\r\n  const closeButtons = pageBody.querySelectorAll('.modal__close');\r\n  let lastFocusedElement;\r\n\r\n  const closeModal = () => {\r\n    if (document.querySelector('.modal-video')) {\r\n      const videoModal = document.querySelector('.modal-video');\r\n\r\n      if (videoModal.classList.contains('modal--visible')) {\r\n        const video = videoModal.querySelector('.modal-video__viewer');\r\n        const togglePlaySvg = videoModal.querySelector('.controls__button--play svg use');\r\n        const spritePath = 'assets/images/sprite.svg';\r\n\r\n        if (video.play) {\r\n          video.pause();\r\n          togglePlaySvg.setAttribute('xlink:href', `${spritePath}#play`);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (document.querySelector('.modal--visible')) {\r\n      pageBody.classList.remove('page__body--lock');\r\n      document.querySelector('.modal--visible').classList.remove('modal--visible');\r\n      document.querySelector('.modal-wrapper--visible').classList.remove('modal-wrapper--visible');\r\n\r\n      lastFocusedElement.focus();\r\n    }\r\n  };\r\n\r\n  const openModal = (evt) => {\r\n    const modalClass = evt.target.dataset.name;\r\n    const modal = pageBody.querySelector(`.${modalClass}`);\r\n    const modalWrapper = modal.closest('.modal-wrapper');\r\n\r\n    lastFocusedElement = document.activeElement;\r\n\r\n    pageBody.classList.add('page__body--lock');\r\n    modal.classList.add('modal--visible');\r\n    modalWrapper.classList.add('modal-wrapper--visible');\r\n\r\n    trapTabKey(modal);\r\n\r\n    modal.addEventListener('keydown', (e) => {\r\n      if (e.keyCode === 27 || e.key === 'Escape' || e.key === 'Esc') {\r\n        closeModal();\r\n      }\r\n    });\r\n\r\n    modalWrapper.addEventListener('click', (event) => {\r\n      if (event.target.classList.contains('modal-wrapper')) {\r\n        closeModal();\r\n      }\r\n    });\r\n  };\r\n\r\n  openModalLogin.addEventListener('click', openModal);\r\n  openModalRegister.addEventListener('click', openModal);\r\n\r\n  if (pageBody.querySelector('.play-button')) {\r\n    const openModalVideo = pageBody.querySelector('.play-button');\r\n    openModalVideo.addEventListener('click', openModal);\r\n  }\r\n\r\n  closeButtons.forEach((button) => button.addEventListener('click', closeModal));\r\n};\r\n","export const animateFormLabels = () => {\r\n  const labels = document.querySelectorAll('.animated-control__label');\r\n\r\n  labels.forEach((label) => {\r\n    label.innerHTML = label.innerText\r\n      .split('')\r\n      .map((letter, idx) => `<span style=\"transition-delay:${idx * 30}ms\">${letter}</span>`)\r\n      .join('');\r\n  });\r\n};\r\n","export const scroll = () => {\r\n  const toTopBtn = document.querySelector('#button-to-top');\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollBy({\r\n      top: -document.documentElement.scrollHeight,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  toTopBtn.addEventListener('click', scrollToTop);\r\n};\r\n","export const togglePassword = () => {\r\n  const passwordButtons = document.querySelectorAll('.form-modal__show-password');\r\n  const passwordInputs = document.querySelectorAll('input[type=\"password\"]');\r\n  const passwordSvgs = document.querySelectorAll('.form-modal__show-password svg use');\r\n  const spritePath = 'assets/images/sprite.svg';\r\n\r\n  passwordButtons.forEach((button, index) => {\r\n\r\n    const onPasswordButtonClick = () => {\r\n      if (passwordInputs[index].getAttribute('type') === 'password') {\r\n        passwordInputs[index].setAttribute('type', 'text');\r\n        passwordSvgs[index].setAttribute('xlink:href', `${spritePath}#closedEye`);\r\n      } else {\r\n        passwordInputs[index].setAttribute('type', 'password');\r\n        passwordSvgs[index].setAttribute('xlink:href', `${spritePath}#eye`);\r\n      }\r\n    };\r\n\r\n    button.addEventListener('click', onPasswordButtonClick);\r\n  });\r\n};\r\n"],"names":["trapTabKey","elem","focusableElements","querySelectorAll","Array","prototype","slice","call","firstTabStop","lastTabStop","length","focus","addEventListener","evt","keyCode","shiftKey","document","activeElement","preventDefault","pageBody","querySelector","navbarMenu","lastFocusedElement","classList","toggle","contains","e","key","remove","menu","openModalLogin","openModalRegister","closeButtons","closeModal","videoModal","video","togglePlaySvg","spritePath","play","pause","setAttribute","openModal","modalClass","target","dataset","name","modal","modalWrapper","closest","add","event","forEach","button","popup","label","innerHTML","innerText","split","map","letter","idx","join","window","scrollBy","top","documentElement","scrollHeight","behavior","passwordButtons","passwordInputs","passwordSvgs","index","getAttribute","togglePassword"],"sourceRoot":""}